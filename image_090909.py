# -*- coding: utf-8 -*-
"""image_090909.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Oc3_YAPXiQUWvh5YMfzPQyYc-Iy-QZGM
"""

!apt-get install -qq tesseract-ocr
!pip install -q pytesseract

import cv2
import pytesseract
from PIL import Image
import matplotlib.pyplot as plt
import pytesseract
import os

import pytesseract
from PIL import Image
from google.colab.patches import cv2_imshow
import cv2
import numpy as np

# Specify the filename
filename = "7g38j0mgh1e11.png"

# Open the image
img = Image.open(filename)

# Convert PIL Image to numpy array (for OpenCV operations if needed)
img_np = np.array(img)

# Perform OCR
text = pytesseract.image_to_string(img)

# Print extracted text
print("Extracted text:")
print(text)

"""APPROACH 2.0

"""



import cv2
import numpy as np
import pytesseract
from PIL import Image
import re
import matplotlib.pyplot as plt

def preprocess_image(image):
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    denoised = cv2.fastNlMeansDenoising(gray)
    thresh = cv2.threshold(denoised, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)[1]
    return thresh

def enhance_image(image):
    kernel = np.array([[-1,-1,-1], [-1,9,-1], [-1,-1,-1]])
    sharpened = cv2.filter2D(image, -1, kernel)
    return sharpened

def post_process_physics_text(text):
    physics_replacements = {
        r'(\d+)\s*ms?\^?-?1\b': r'\1 m/s',  # Fix meters per second
        r'(\d+)\s*m/s\^?2\b': r'\1 m/s²',   # Fix acceleration units
        r'\bAp\b': 'Δp',                    # Change in momentum
        r'\bdv\b': 'Δv',                    # Change in velocity
        r'\bdt\b': 'Δt',                    # Change in time
        r'(\d+)\s*([NJ])\b': r'\1 \2',      # Space between number and N or J
        r'(\d+)\s*kg\b': r'\1 kg',          # Space before kg
        r'(\d+)\s*m\b': r'\1 m',            # Space before m (meters)
        r'(\d+)\s*s\b': r'\1 s',            # Space before s (seconds)
        r'(\d+)\s*K\b': r'\1 K',            # Space before K (Kelvin)
        r'(\d+)\s*Pa\b': r'\1 Pa',          # Space before Pa (Pascal)
        r'(\d+)\s*W\b': r'\1 W',            # Space before W (Watt)
        r'\bF\s*=\s*ma\b': 'F = ma',        # Newton's Second Law
        r'\bE\s*=\s*mc\^?2\b': 'E = mc²',   # Einstein's mass-energy equivalence
        r'\bPV\s*=\s*nRT\b': 'PV = nRT',    # Ideal Gas Law
        r'\bv\^?2\b': 'v²',                 # Velocity squared
        r'\ba\^?2\b': 'a²',                 # Acceleration squared
        r'\bπ': 'π',                        # Ensure pi symbol is correct
        r'\b([pv])1\b': r'\1₁',             # Subscript 1 for p or v
        r'\b([pv])2\b': r'\1₂',             # Subscript 2 for p or v
        r'(\d+)([,.])(\d+)': r'\1.\3',      # Standardize decimal point
    }

    for pattern, replacement in physics_replacements.items():
        text = re.sub(pattern, replacement, text)

    return text

def ocr_physics_question(image_path):
    image = cv2.imread(image_path)
    preprocessed = preprocess_image(image)
    enhanced = enhance_image(preprocessed)

    custom_config = r'--oem 3 --psm 6 -c tessedit_char_whitelist="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,()-+=^°ΔπμρλσωΩ "'

    text = pytesseract.image_to_string(enhanced, config=custom_config)
    corrected_text = post_process_physics_text(text)

    return corrected_text

# Use the function
image_path = '7g38j0mgh1e11.png'  # Replace with your image path
result = ocr_physics_question(image_path)

print("Extracted and corrected physics question:")
print(result)

# Display the image (optional)
plt.imshow(cv2.imread(image_path))
plt.axis('off')
plt.show()

